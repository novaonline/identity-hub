@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
	ViewData["Title"] = "Log in";
}

<h2>@*@ViewData["Title"].*@</h2>
@if (ViewData.ModelState["credentials"] != null && ViewData.ModelState["credentials"].Errors.Any())
{
	<div class="alert alert-danger" role="alert">
		<span>@ViewData.ModelState["credentials"].Errors.First().ErrorMessage</span>
	</div>
}

<div style="width:100%;">
	<div style="width:75%;margin: 0 auto;">
		<div class="text-center">
			<section>
				<form asp-action="Index" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
					<h4>Enter Credentials for Access</h4>
					<hr />
					<div class="form-group">
						<input asp-for="Identity" class="form-control center-block" placeholder="Email or Username" />
						<span asp-validation-for="Identity" class="text-danger"></span>
					</div>
					<div class="form-group">
						<input asp-for="Password" class="form-control center-block" placeholder="Password" />
						<span asp-validation-for="Password" class="text-danger"></span>
					</div>
					<div class="form-group">
						<div class="">
							<div class="checkbox center-block">
								<label asp-for="RememberMe">
									<input asp-for="RememberMe" />
									@Html.DisplayNameFor(m => m.RememberMe)
								</label>
							</div>
						</div>
					</div>
					<div class="form-group">
						<div>
							<button style="max-width: 280px;width: 100%;" type="submit" class="btn btn-default">Log in</button>
						</div>
					</div>
					<p>
						<a asp-controller="Register" asp-action="Index" asp-route-returnurl="@ViewData["ReturnUrl"]"><b>No Account?</b> Register as a new user!</a>
					</p>
					@*<p>
							<a asp-action="ForgotPassword">Forgot your password?</a>
						</p>*@
				</form>
			</section>
		</div>
	</div>
	@*<div class="col-md-4">
			<section>
				<h4>Use another service to log in.</h4>
				<hr />
				@{
					var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
					if (loginProviders.Count == 0)
					{
						<div>
							<p>
								There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
								for details on setting up this ASP.NET application to support logging in via external services.
							</p>
						</div>
					}
					else
					{
						<form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
							<div>
								<p>
									@foreach (var provider in loginProviders)
									{
										<button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
									}
								</p>
							</div>
						</form>
					}
				}
			</section>
		</div>*@
</div>

@section Scripts {
	@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
	@if (ViewData.ModelState["credentials"] != null && ViewData.ModelState["credentials"].Errors.Any())
	{
		<script>
			$(document.getElementById("@Html.IdFor(x=>x.Identity)")).on('focus',closeAlert);
			$(document.getElementById("@Html.IdFor(x=>x.Password)")).on('focus',closeAlert);
			function closeAlert(evt) {
				$(".alert").alert('close');
			}
		</script>
	}

}
